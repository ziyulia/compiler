AUTHORS
-------

- Yao-Hua XU
- Ziyu LIU

===============

Description of the project
--------------------------

The objective of the project is to develop a compiler

===============

Sources
-------

We use github for version control

===============

How to…
-------

…retrieve the sources?

  git clone https://github.com/ziyulia/compiler.git

…compile?

  dune build

…execute and test?

  dune exec ./pfxVM.exe -- TESTFILE.pfx


===============

Structure of the project
------------------------

The project is organized as following:

Explain here the organization of your project, what is the use of each file or
group of files, etc.

You may also show the file tree as the following example:

project
├── README
├── dune-project
├── expr: the expr compiler
│   ├── README
│   ├── basic
│   │   ├── ast.ml
│   │   ├── ast.mli
│   │   ├── eval.ml
│   │   ├── eval.mli
│   │   ├── lexer.mll
│   │   ├── parser.mly
│   │   ├── tests: for tests
│   │   │   └── an_example.expr
│   │   ├── toPfx.ml            
│   │   └── toPfx.mli
│   ├── common
│   │   ├── binOp.ml
│   │   ├── binOp.mli
│   │   └── dune
│   ├── compiler.ml: main file for the expr compiler
│   ├── dune
│   ├── fun: the expr parser for section 7
│   │   ├── ast.ml
│   │   ├── ast.mli
|   │   ├── dune
│   │   ├── eval.ml
│   │   ├── eval.mli
│   │   ├── lexer.mll
│   │   |── parser.mly
│   │   ├── toPfx.ml            
│   │   └── toPfx.mli
│   └── main.ml
├── pfx: the pfx VM
│   ├── basic
│   │   ├── ast.ml               
│   │   ├── ast.mli
│   │   ├── dune
│   │   ├── eval.ml              
│   │   ├── eval.mli
│   │   ├── lexer.mll           
│   │   ├── parser.mly           
│   │   └── tests: for tests
│   │       └── ok_prog.pfx
│   └── pfxVM.ml: main file for the pfx VM
└── utils
    ├── dune
    ├── location.ml: module offering a data type for a location in a file
    └── location.mli
===============

Progress
--------

- We stopped at question 11 
- The code regarding to question 7 in the pfx/lexer.mll file still need to be improved

===============

Know bugs and issues
--------------------

- We were not able to manage xxx…
- Each time we tried to execute "dune exec file.exe" we got a permission denied error. 

===============

Helpful resources
-----------------

- we used Stack Overflow to solve the problem of xxx :
  https://stackoverflow/xxxxxxi
  https://stackoverflow/yyyyyy
- someone on GitHub provided an interesting example very similar to the answer of the question x.y : https://github.com/xxxx
- …

===============

Difficulties
------------
- the systax of ocaml is extremely difficult to comprend
- thinking all the patten match cases and reture the correspond result (ok or raise error)
- thinking functionally
- deduce the excuatation process with lambda (for instance (λx.x + 1) )
- changing habits by using an unknown language


