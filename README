AUTHORS
-------

- Yao-Hua XU
- Ziyu LIU

===============

Description of the project
--------------------------

The objective of the project is to develop a compiler

===============

Sources
-------

We use github for version control

===============

How to…
-------

…retrieve the sources?

  git clone https://github.com/ziyulia/compiler.git

…compile?

  dune build

…execute and test?

  dune exec ./pfxVM.exe -- TESTFILE.pfx


===============

Structure of the project
------------------------

The project is organized as following:

project
├── README
├── dune-project
├── expr: the expr compiler
│   ├── README
│   ├── basic
│   │   ├── ast.ml           
│   │   ├── ast.mli
│   │   ├── eval.ml
│   │   ├── eval.mli
│   │   ├── lexer.mll
│   │   ├── parser.mly
│   │   ├── tests: for tests
│   │   │   └── an_example.expr
│   │   ├── toPfx.ml                    -- Exercise 5
│   │   └── toPfx.mli
│   ├── common
│   │   ├── binOp.ml
│   │   ├── binOp.mli
│   │   └── dune
│   ├── compiler.ml: main file for the expr compiler
│   ├── dune
│   ├── fun: the expr parser for section 7
│   │   ├── ast.ml
│   │   ├── ast.mli
|   │   ├── dune
│   │   ├── eval.ml
│   │   ├── eval.mli
│   │   ├── lexer.mll                     -- Exercise 10,11
│   │   |── parser.mly                    -- Exercise 10,11
│   │   ├── toPfx.ml                      -- Exercise 10
│   │   └── toPfx.mli
│   └── main.ml
├── pfx: the pfx VM
│   ├── basic
│   │   ├── ast.ml                        -- Exercise 4
│   │   ├── ast.mli
│   │   ├── dune
│   │   ├── eval.ml                       -- Exercise 4
│   │   ├── eval.mli
│   │   ├── lexer.mll                     -- Exercise 6,7 
│   │   ├── parser.mly                    -- Exercise 8
│   │   └── tests: for tests
│   │       └── ok_prog.pfx
│   └── pfxVM.ml: main file for the pfx VM
└── utils
    ├── dune
    ├── location.ml: module offering a data type for a location in a file
    └── location.mli
===============

Progress
--------

- We stopped at question 12

===============

Know bugs and issues
--------------------

- We were not able to manage Exercise 13
- Each time we tried to execute "dune exec file.exe" we got a permission denied error. 

===============

Helpful resources
-----------------

- OCaml - Lexer and parser generators (ocamllex, ocamlyacc) https://ocaml.org/manual/lexyacc.html
- Error Handling OCaml https://ocaml.org/learn/tutorials/error_handling.html
- OCaml lists https://ocaml.org/learn/tutorials/lists.html
- Dune: depending on local module “Library not found” 
https://discuss.ocaml.org/t/dune-depending-on-local-module-library-not-found/5793/2

===============

Difficulties
------------
- the systax of ocaml is extremely difficult to comprend
- thinking all the patten match cases and reture the correspond result (ok or raise error)
- thinking functionally
- deduce the excuatation process with lambda (for instance (λx.x + 1) )
- changing habits by using an unknown language


